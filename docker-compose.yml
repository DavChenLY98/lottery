version: '3'  
services:  
  mysql:  
    image: mysql:5.7.43  
    container_name: mysql  
    restart: always  
    environment:  
      MYSQL_ROOT_PASSWORD: root  
    volumes:  
      - ./mysql-data:/var/lib/mysql  
    ports:  
      - "3306:3306"  
  rabbitmq:  
    image: rabbitmq:3.6.10-management  
    container_name: rabbitmq  
    restart: always  
    ports:  
      - "15672:15672"  
      - "5672:5672"  
  redis:  
    image: redis:6.0.6  
    container_name: redis  
    restart: always  
    ports:  
      - "6379:6379"  
  api:  
    image: api:0.0.1-SNAPSHOT  
    container_name: api  
    restart: always  
    ports:  
      - "9001:9001" 
    links:  
      - mysql  
      - rabbitmq  
      - redis  
    environment:  
      spring.datasource.url: jdbc:mysql://mysql/prize?useUnicode=true&characterEncoding=utf-8  
      spring.datasource.username: prize  
      spring.datasource.password: prize  
      spring.rabbitmq.host: rabbitmq
      spring.redis.host: redis
      spring.redis.port: 3306
  msg:  
    image: msg:0.0.1-SNAPSHOT  
    container_name: msg  
    restart: always  
    links:  
      - mysql  
      - rabbitmq  
      - redis  
    environment:  
      spring.datasource.url: jdbc:mysql://mysql/prize?useUnicode=true&characterEncoding=utf-8  
      spring.datasource.username: prize  
      spring.datasource.password: prize  
      spring.rabbitmq.host: rabbitmq
      spring.redis.host: redis
      spring.redis.port: 3306       
    
  backend:  
    image: backend:0.0.1-SNAPSHOT  
    container_name: backend  
    restart: always 
    ports:  
      - "8080:8080"       
    volumes:  
      - ./backend-upload:/usr/local/tomcat/webapps/ROOT/upload  
    links:  
      - mysql  

  nginx:  
    image: nginx:1.16.1  
    container_name: nginx  
    restart: always  
    ports:  
      - "80:80"  
    volumes:  
      - ./nginx-conf:/etc/nginx/conf.d
      - ./nginx-h5:/usr/share/nginx/html
      - ./backend-upload:/usr/share/nginx/html/upload   
    links:  
      - api  
   